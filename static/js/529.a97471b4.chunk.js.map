{"version":3,"file":"static/js/529.a97471b4.chunk.js","mappings":"8QAEaA,EAFeC,EAAQ,MAA5BC,QAEoBC,IAAV,i1B,SC+DlB,EA3DqB,WACnB,IAAMC,GAAUC,EAAAA,EAAAA,MAKVC,EAAY,mCAAG,WAAOC,EAAP,sEAAiBC,UACpCJ,GAAQK,EAAAA,EAAAA,IAASF,IADE,2CAAH,wDAkBlB,OACE,SAACP,EAAD,WACE,SAAC,KAAD,CAAQU,cAxBU,CACpBC,MAAO,GACPC,SAAU,IAsB8BC,SAAUP,EAAhD,UACE,UAAC,KAAD,YACE,mBAAOQ,QAAQ,QAAf,mBAEE,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,QAGZC,UAAQ,QAGZ,mBAAOJ,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,WACLC,KAAK,WACLC,YAAY,WAGZC,UAAQ,QAGZ,4BACE,mBAAQH,KAAK,SAAb,sBACA,SAAC,KAAD,CAAMI,GAAI,SAAV,6BAMX,C","sources":["components/registrations/Registration.styled.jsx","components/registrations/Registrations.jsx"],"sourcesContent":["const { default: styled } = require('@emotion/styled');\n\nexport const DivEl = styled.div`\n  /* display: flex; */\n  position: absolute;\n  top: 255px;\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 496px;\n  background-color: #fff;\n  border-radius: 30px;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  padding: 40px 20px;\n  //\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  Form {\n    display: flex;\n    flex-direction: column;\n  }\n  label {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    margin-bottom: 20px;\n    span {\n      margin-bottom: 12px;\n    }\n  }\n\n  div {\n    display: flex;\n    gap: 8px;\n    justify-content: center;\n    a {\n      margin-bottom: 0;\n    }\n  }\n  input {\n    width: 240px;\n    height: 52px;\n    border-radius: 30px;\n    padding: 17px 19px;\n  }\n`;\n","import { Formik, Field, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport { DivEl } from './Registration.styled';\n\nconst Registration = () => {\n  const dispath = useDispatch();\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const handleSubmit = async (values, { resetForm }) => {\n    dispath(register(values));\n\n    // resetForm();\n    // let check = data.find(\n    //   e => e.name.toLowerCase() === values.name.toLowerCase()\n    // );\n    // if (check === undefined) {\n    //   resetForm();\n    //   try {\n    //     await addContact(values);\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // } else {\n    //   swal(`\"${values.name}\" is alredy in contacts`, '', 'warning');\n    // }\n  };\n  return (\n    <DivEl>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <label htmlFor=\"email\">\n            Email\n            <Field\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <Field\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <div>\n            <button type=\"submit\">Sign Up</button>\n            <Link to={'/login'}>LOG IN</Link>\n          </div>\n        </Form>\n      </Formik>\n    </DivEl>\n  );\n};\nexport default Registration;\n"],"names":["DivEl","require","default","div","dispath","useDispatch","handleSubmit","values","resetForm","register","initialValues","email","password","onSubmit","htmlFor","type","name","placeholder","required","to"],"sourceRoot":""}